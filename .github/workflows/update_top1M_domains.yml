name: Update TOP1M domains

on:
  schedule:
    - cron: '0 */4 * * *'  # Runs every 4 hours
  workflow_dispatch:

jobs:
  fetch-top1M-list-files:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository with Git LFS
        uses: actions/checkout@v3
        with:
          lfs: true  # Enable Git Large File Storage (LFS)

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pandas requests

      - name: Run the script to update TOP1M
        run: |
          cd Lists/Domains/TOP1M
          python3 download_and_merge_TOP1M.py

      - name: List files in the target directory
        run: ls -la Lists/Domains/TOP1M

      - name: Set up Git LFS for large files
        run: |
          git lfs install
          git lfs track "Lists/Domains/TOP1M/TOP1M_domains.csv"
          git add .gitattributes
          git commit -m "Enable Git LFS for large files" || echo "No LFS changes to commit"

      - name: Prune old LFS objects
        run: |
          git lfs prune --verify-remote
          git reflog expire --expire=now --all
          git gc --prune=now
        continue-on-error: true  # Prevent workflow failure if nothing to prune


      - name: Commit and Push results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Ensure we pull the latest changes first
          git pull --rebase || echo "No updates to pull"

          # Add all new and modified files, including LFS-tracked files
          git add --all Lists/Domains/TOP1M/
          
          # Check if there are actual changes before committing
          if git diff --staged --quiet; then
            echo "No changes detected, skipping commit."
          else
            git commit -m "Update TOP1M domains files"
            git push
          fi

      - name: Push LFS objects
        run: git lfs push origin main || echo "No LFS changes to push"

      - name: Prune old LFS objects
        run: |
          git lfs prune --verify-remote
          git reflog expire --expire=now --all
          git gc --prune=now
        continue-on-error: true  # Prevent workflow failure if nothing to prune


