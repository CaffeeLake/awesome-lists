name: Fetch MaxMind Databases Daily

on:
  schedule:
    - cron: '0 2 * * *'  # Runs daily at 02:00 UTC
  workflow_dispatch:  # Allows manual trigger from GitHub Actions UI

jobs:
  update-geoip:
    runs-on: ubuntu-latest
    environment: maxmind  # Ensures secrets are loaded from the "maxmind" environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full commit history

      - name: Enable Git LFS (Pre-installed)
        run: git lfs install

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install requests  

      - name: Debug Secrets (Check If They Exist)
        run: |
          [[ -z "${{ secrets.MAXMIND_LICENSE_KEY }}" ]] && echo "❌ MAXMIND_LICENSE_KEY is missing!" || echo "✅ MAXMIND_LICENSE_KEY is set"
          [[ -z "${{ secrets.MAXMIND_ACCOUNT_ID }}" ]] && echo "❌ MAXMIND_ACCOUNT_ID is missing!" || echo "✅ MAXMIND_ACCOUNT_ID is set"

      - name: Run Fetch Script
        working-directory: Lists/ASNs/correlation_maxmind_geo_db/
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}
          MAXMIND_ACCOUNT_ID: ${{ secrets.MAXMIND_ACCOUNT_ID }}
        run: |
          echo "🚀 Running fetch_maxmind_databases_daily.py..."
          python fetch_maxmind_databases_daily.py || echo "❌ Script failed! Check logs."

      - name: List Modified Files and Sizes
        run: |
          echo "🚀 Checking modified files..."
          git status --short
          echo "🚀 Listing file sizes..."
          find Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/ -type f -exec ls -lh {} +

      - name: Track Only Two Large Files in Git LFS
        run: |
          echo "🚀 Ensuring only required large files are tracked by Git LFS..."
          CSV_DIR="Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted"
          CITY_IPV4=$(find $CSV_DIR -name "GeoLite2-City-Blocks-IPv4.csv" | head -n 1)
          CITY_IPV6=$(find $CSV_DIR -name "GeoLite2-City-Blocks-IPv6.csv" | head -n 1)

          if [[ -f "$CITY_IPV4" ]]; then
            git lfs track "$CITY_IPV4"
            echo "✅ Tracking $CITY_IPV4"
          fi
          if [[ -f "$CITY_IPV6" ]]; then
            git lfs track "$CITY_IPV6"
            echo "✅ Tracking $CITY_IPV6"
          fi

          if git diff --cached --quiet .gitattributes; then
            echo "✅ No changes to .gitattributes needed."
          else
            git add .gitattributes
            git commit -m "Updated .gitattributes for Git LFS tracking"
          fi

      - name: Commit and Push All Files (With LFS for Large Files)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
          echo "🚀 Stashing any unstaged changes..."
          git stash --include-untracked
      
          echo "🚀 Pulling latest changes..."
          git pull --rebase
      
          echo "🚀 Popping stashed changes..."
          git stash pop || echo "✅ No stashed changes to apply."
      
          echo "🚀 Adding all modified files..."
          git add Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/*
      
          echo "🚀 Checking if there are changes to commit..."
          if git diff --cached --quiet; then
            echo "✅ No changes to commit."
          else
            git commit -m "Update MaxMind DBs with latest extracted data"
            echo "🚀 Pushing changes..."
            git push || (echo "❌ Push failed! Retrying..." && sleep 10 && git push)
          fi


      - name: Clean Up Old LFS Files to Save Storage
        run: |
          echo "🚀 Cleaning up old Git LFS files..."
          git lfs prune || echo "✅ No old LFS files to remove."
