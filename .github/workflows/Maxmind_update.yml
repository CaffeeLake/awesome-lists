name: Fetch MaxMind Databases Daily

on:
  schedule:
    - cron: '0 2 * * *'  # Runs daily at 02:00 UTC
  workflow_dispatch:  # Allows manual trigger from GitHub Actions UI

jobs:
  update-geoip:
    runs-on: ubuntu-latest
    environment: maxmind  # Ensures secrets are loaded from the "maxmind" environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install requests  

      - name: Debug Secrets (Check If They Exist)
        run: |
          [[ -z "${{ secrets.MAXMIND_LICENSE_KEY }}" ]] && echo "❌ MAXMIND_LICENSE_KEY is missing!" || echo "✅ MAXMIND_LICENSE_KEY is set"
          [[ -z "${{ secrets.MAXMIND_ACCOUNT_ID }}" ]] && echo "❌ MAXMIND_ACCOUNT_ID is missing!" || echo "✅ MAXMIND_ACCOUNT_ID is set"

      - name: Run Fetch Script
        working-directory: Lists/ASNs/correlation_maxmind_geo_db/
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}
          MAXMIND_ACCOUNT_ID: ${{ secrets.MAXMIND_ACCOUNT_ID }}
        run: |
          echo "🚀 Running fetch_maxmind_databases_daily.py..."
          python fetch_maxmind_databases_daily.py || echo "❌ Script failed! Check logs."

      - name: List Generated Files
        run: ls -lhR Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/

      - name: Ensure "big files" Release Exists
        id: ensure_release
        run: |
          if ! gh release view "big-files" --json id --jq '.id' > /dev/null 2>&1; then
            echo "No existing release found, creating one..."
            gh release create "big-files" --title "big files" --notes "Release for large files" --repo ${{ github.repository }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Large Files to "big files" Release
        run: |
          FILES_TO_UPLOAD=(
            "Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/GeoLite2-City-Blocks-IPv4.csv"
            "Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/GeoLite2-City-Blocks-IPv6.csv"
          )

          for file in "${FILES_TO_UPLOAD[@]}"; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload "big-files" "$file" --clobber
              RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/big-files"
              echo $RELEASE_URL > "$file.link"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move .link Files to Repo
        run: |
          mv Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/GeoLite2-City-Blocks-IPv4.csv.link \
             Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/
          
          mv Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/GeoLite2-City-Blocks-IPv6.csv.link \
             Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/

      - name: Remove Large Files Locally (Avoid Pushing Them)
        run: |
          rm -f Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/GeoLite2-City-Blocks-IPv4.csv
          rm -f Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/GeoLite2-City-CSV-latest/GeoLite2-City-Blocks-IPv6.csv

      - name: Commit and Push Small Files & Release Links
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull
          git add Lists/ASNs/correlation_maxmind_geo_db/maxmind_databases/extracted/
          git commit -m "Update MaxMind DBs & release links" --allow-empty
          git push
